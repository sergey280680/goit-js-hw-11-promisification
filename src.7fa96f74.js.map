{"version":3,"sources":["js/_task-1.js","js/index.js","index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then"],"mappings":";;;AAEA,MAAMA,EAAQC,GAEL,IAAIC,QAAQC,IACjBC,WAAW,KACTD,EAAQF,IACPA,KAIDI,EAASC,GAAQC,QAAQC,sBAAsBF,OAGrDN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ;;;;ACbjB,aAFA,QAAA,aACA,QAAA,aACA,QAAA;;ACFA,aADA,QAAA,oBACA,QAAA","file":"src.7fa96f74.js","sourceRoot":"../src","sourcesContent":["// Напиши функцию delay(ms), которая возвращает промис, переходящий в состояние \"resolved\" через ms миллисекунд. Значением исполнившегося промиса должно быть то кол-во миллисекунд которое передали во время вызова функции delay.\n\nconst delay = ms => {\n  // Твой код\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(ms);\n    }, ms);\n  });\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(3500).then(logger); // Resolved after 1500ms\ndelay(1000).then(logger); // Resolved after 1000ms\n","// import './_task';\nimport './_task-1';\nimport './_task-2';\nimport './_task-3';\n","import './sass/main.scss';\nimport './js/index.js'\n"]}